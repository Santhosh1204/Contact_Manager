{"ast":null,"code":"var _jsxFileName = \"B:\\\\Rest_Project\\\\contact-app\\\\src\\\\components\\\\EditContact.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditContact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = e => {\n      e.preventDefault();\n      if (!this.state.name || !this.state.email || !this.state.phone || !this.state.address) {\n        alert(\"All fields are mandatory\");\n        return;\n      }\n      this.props.updateContactHandler(this.state);\n      this.setState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\"\n      });\n      this.props.navigate(\"/\");\n    };\n    this.state = {\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\"\n    };\n  }\n  componentDidMount() {\n    const {\n      id\n    } = this.props.params; // Get the ID from params\n    const contact = this.props.contacts.find(contact => contact.id === id);\n    if (contact) {\n      this.setState({\n        id: contact.id,\n        name: contact.name,\n        email: contact.email,\n        phone: contact.phone,\n        address: contact.address\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ui form\",\n        onSubmit: this.update,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: this.state.name,\n            onChange: e => this.setState({\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: this.state.email,\n            onChange: e => this.setState({\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            placeholder: \"Phone\",\n            value: this.state.phone,\n            onChange: e => this.setState({\n              phone: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            placeholder: \"Address\",\n            value: this.state.address,\n            onChange: e => this.setState({\n              address: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button blue\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Use a Higher Order Component to wrap EditContact and inject `params`\nexport default _s(props => {\n  _s();\n  return /*#__PURE__*/_jsxDEV(EditContact, {\n    ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 27\n  }, this);\n}, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","EditContact","Component","constructor","props","update","e","preventDefault","state","name","email","phone","address","alert","updateContactHandler","setState","navigate","id","componentDidMount","params","contact","contacts","find","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_s"],"sources":["B:/Rest_Project/contact-app/src/components/EditContact.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nclass EditContact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            address: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.params; // Get the ID from params\r\n        const contact = this.props.contacts.find((contact) => contact.id === id);\r\n\r\n        if (contact) {\r\n            this.setState({\r\n                id: contact.id,\r\n                name: contact.name,\r\n                email: contact.email,\r\n                phone: contact.phone,\r\n                address: contact.address\r\n            });\r\n        }\r\n    }\r\n\r\n    update = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.name || !this.state.email || !this.state.phone || !this.state.address) {\r\n            alert(\"All fields are mandatory\");\r\n            return;\r\n        }\r\n        this.props.updateContactHandler(this.state);\r\n        this.setState({ name: \"\", email: \"\", phone: \"\", address: \"\" });\r\n        this.props.navigate(\"/\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui main\">\r\n                <h2>Edit Contact</h2>\r\n                <form className=\"ui form\" onSubmit={this.update}>\r\n                    <div className=\"field\">\r\n                        <label>Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Name\"\r\n                            value={this.state.name}\r\n                            onChange={(e) => this.setState({ name: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={this.state.email}\r\n                            onChange={(e) => this.setState({ email: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Phone</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Phone\"\r\n                            value={this.state.phone}\r\n                            onChange={(e) => this.setState({ phone: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label>Address</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            placeholder=\"Address\"\r\n                            value={this.state.address}\r\n                            onChange={(e) => this.setState({ address: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <button className=\"ui button blue\">Update</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Use a Higher Order Component to wrap EditContact and inject `params`\r\nexport default (props) => <EditContact {...props} params={useParams()} />;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}